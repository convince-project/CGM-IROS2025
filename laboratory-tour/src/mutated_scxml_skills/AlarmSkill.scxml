<?xml version="1.0" encoding="UTF-8"?>
<scxml
    version="1.0"
    xmlns="..."
    datamodel="ecmascript"
    name="AlarmSkill"
    initial="idle"> 

    <!-- AlarmSkill is a server for tick from the ROS2Action plugin-->
    <ros_service_server service_name="/AlarmSkill/tick" type ="bt_interfaces_dummy/TickAction"/>
    <!-- AlarmSkill is a server for halt from the ROS2Action plugin-->
    <ros_service_server service_name="/AlarmSkill/halt" type ="bt_interfaces_dummy/HaltAction"/>
    <!-- AlarmSkill is a client for StartAlarm from the NotifyUserComponent -->
    <ros_service_client service_name="/NotifyUserComponent/StartAlarm" type ="notify_user_interfaces_dummy/StartAlarm"/>
    <!-- AlarmSkill is a client for StopAlarm from the NotifyUserComponent -->
    <ros_service_client service_name="/NotifyUserComponent/StopAlarm" type ="notify_user_interfaces_dummy/StopAlarm"/>

    <datamodel>
        <data id="SKILL_SUCCESS" type="int8" expr="0" />
        <data id="SKILL_FAILURE" type="int8" expr="1" />
        <data id="SKILL_RUNNING" type="int8" expr="2" />
        <data id="m_probability" expr="1"/>
    </datamodel>

    <state id="idle">
        <onentry>
            <log expr="'State idle'"/>
            <assign location="m_probability" expr="Math.random()"/>
            <log expr="m_probability"/>
        </onentry>
        <ros_service_handle_request name="/AlarmSkill/tick" target="startAlarm" cond="m_probability &lt; 0.5">
            <log expr="'Transition to startAlarm'"/>
            <ros_service_send_request name="/NotifyUserComponent/StartAlarm"/>
        </ros_service_handle_request>
        <ros_service_handle_request target="idle" name="/AlarmSkill/tick" cond="m_probability &gt;= 0.5">
            <log expr="'Transition to idle'"/>
            <ros_service_send_response name="/AlarmSkill/tick">
                <field name="status" expr="SKILL_SUCCESS"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_request>
        <ros_service_handle_request name="/AlarmSkill/halt" target="stopAlarm">
            <ros_service_send_request name="/NotifyUserComponent/StopAlarm"/>
        </ros_service_handle_request>

    </state>

    <state id="startAlarm">
        <ros_service_handle_response name="/NotifyUserComponent/StartAlarm" cond="_res.is_ok" target="idle">
            <ros_service_send_response name="/AlarmSkill/tick">
                <field name="status" expr="SKILL_SUCCESS"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <!-- <ros_service_handle_response name="/NotifyUserComponent/StartAlarm" cond="!(_res.is_ok)" target="idle"> -->
        <ros_service_handle_response name="/NotifyUserComponent/StartAlarm" cond="(_res.is_ok) == false" target="idle">
            <ros_service_send_response name="/AlarmSkill/tick">
                <field name="status" expr="SKILL_FAILURE"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_response>
        <ros_service_handle_request name="/AlarmSkill/halt" target="stopAlarm">
            <ros_service_send_request name="/NotifyUserComponent/StopAlarm"/>
        </ros_service_handle_request>
        <ros_service_handle_request name="/AlarmSkill/tick" target="startAlarm">
            <ros_service_send_response name="/AlarmSkill/tick">
                <field name="status" expr="SKILL_RUNNING"/>
                <field name="is_ok" expr="true"/>
            </ros_service_send_response>
        </ros_service_handle_request>
    </state>

    <state id="stopAlarm">
        <ros_service_handle_response name="/NotifyUserComponent/StopAlarm" target="idle">
            <ros_service_send_response name="/AlarmSkill/halt"/>
        </ros_service_handle_response>
        <ros_service_handle_request name="/AlarmSkill/halt" target="stopAlarm"/>
    </state>
</scxml>
